# Generated by Django 2.2.12 on 2023-04-19 00:20

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields
import select2.fields


class Migration(migrations.Migration):
    dependencies = [
        ('rcallocation', '0068_add_nhmrc_mrff_grant_type'),
    ]

    operations = [
        migrations.AlterField(
            model_name='chiefinvestigator',
            name='institution',
            field=models.CharField(
                help_text='The name of the institution or university of\n                    the chief investigator including the schools,\n                    faculty and/or department.',
                max_length=200,
                verbose_name='Institution (legacy)',
            ),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name='ID',
                    ),
                ),
                (
                    'ror_id',
                    models.CharField(
                        blank=True,
                        help_text="This will be blank for organisations that don't\n        (yet) have an ROR id.",
                        max_length=32,
                        verbose_name='Research Organization Registry id',
                    ),
                ),
                (
                    'full_name',
                    models.CharField(
                        help_text="The official full name for the organisation.  This\n        should be taken from the ROR record when available.\n        For example: 'The University of Queensland'",
                        max_length=200,
                        verbose_name='Official name',
                    ),
                ),
                (
                    'short_name',
                    models.CharField(
                        blank=True,
                        help_text="An optional short name or acronym for the organisation.\n        This should be taken from the ROR record when available.\n        For example; 'UQ'",
                        max_length=16,
                        verbose_name='Short name',
                    ),
                ),
                (
                    'url',
                    models.CharField(
                        blank=True,
                        help_text='Organisational website URL for disambiguation purposes.',
                        max_length=64,
                        verbose_name='Organisation website',
                    ),
                ),
                (
                    'country',
                    django_countries.fields.CountryField(
                        help_text='Two character ISO country code for the organisation.\n        See https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2',
                        max_length=2,
                        verbose_name='Country (ISO 2 letter)',
                    ),
                ),
                (
                    'enabled',
                    models.BooleanField(
                        default=True,
                        help_text='If false, this organisation should no longer be used;\n        e.g. because the research organisation no longer exists.',
                    ),
                ),
                (
                    'proposed_by',
                    models.CharField(
                        blank=True,
                        help_text="The keystone id of the person who proposed this\n                     ('type in') organisation.",
                        max_length=64,
                    ),
                ),
                (
                    'parent',
                    models.ForeignKey(
                        help_text="If not null, this denotes this organisation's\n        parent organisation.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name='children',
                        to='rcallocation.Organisation',
                    ),
                ),
                (
                    'precedes',
                    models.ManyToManyField(
                        help_text='This denotes this organisation was precede (or in the\n        reverse superseded) by these organisations.',
                        related_name='supersedes',
                        to='rcallocation.Organisation',
                    ),
                ),
                (
                    'vetted_by',
                    models.ForeignKey(
                        help_text="The approver who vetted this organisation record.\n        Vetting only applies to organisations without a ROR id.  The approver\n        should validate that 1) the organisation is acceptable; i.e. it\n        meets ROR and local criteria, 2) the full and short name are in the\n        standard form, correctly spelled, etc, 3) the ISO country code\n        is correct, and 4) the organisation hasn't already been recorded\n        here with a different name.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to='rcallocation.Approver',
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name='allocationrequest',
            name='supported_organisations',
            field=select2.fields.ManyToManyField(
                blank=True, sorted=False, to='rcallocation.Organisation'
            ),
        ),
        migrations.AddField(
            model_name='chiefinvestigator',
            name='primary_organisation',
            field=select2.fields.ForeignKey(
                blank=True,
                help_text="The chief investigator's primary organisation.",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to='rcallocation.Organisation',
            ),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(
                fields=['full_name'], name='rcallocatio_full_na_36221b_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(
                fields=['short_name'], name='rcallocatio_short_n_7a281b_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(
                fields=['ror_id'], name='rcallocatio_ror_id_ec527b_idx'
            ),
        ),
        migrations.AddIndex(
            model_name='organisation',
            index=models.Index(
                fields=['country'], name='rcallocatio_country_6fd779_idx'
            ),
        ),
        migrations.AddConstraint(
            model_name='organisation',
            constraint=models.UniqueConstraint(
                fields=('full_name', 'ror_id', 'url'),
                name='unique_organisation',
            ),
        ),
    ]
