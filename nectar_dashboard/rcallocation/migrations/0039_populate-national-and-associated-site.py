# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2019-10-22 05:02
from __future__ import unicode_literals

from django.db import migrations


def backfill(apps, schema_editor):
    AllocationRequest = apps.get_model('rcallocation', 'AllocationRequest')
    Site = apps.get_model('rcallocation', 'Site')
    Approver = apps.get_model('rcallocation', 'Approver')
    approver_map = {}
    for approver in Approver.objects.all():
        sites = approver.sites
        if sites.count() > 0:
            approver_map[approver.username] = sites.first()

    for allocation in AllocationRequest.objects.all():
        if allocation.allocation_home:
            if allocation.allocation_home == 'national':
                allocation.national = True
                site = approver_map.get(allocation.approver_email)
            else:
                site = Site.objects.get(name=allocation.allocation_home)
            save_modified = allocation.modified_time
            allocation.associated_site = site
            allocation.save()
            # Undo the damage of the auto_now attribute
            AllocationRequest.objects \
                             .filter(id=allocation.id) \
                             .update(modified_time=save_modified)


def unbackfill(apps, schema_editor):
    # Erase all 'national' and 'associated_site' info.  This will also
    # get rid of any info that was added after the backfilling.  So this
    # is a bit dangerous.  But it does allow us to have multiple goes at
    # the backfilling.
    AllocationRequest = apps.get_model('rcallocation', 'AllocationRequest')
    for allocation in AllocationRequest.objects.all():
        allocation.national = True
        allocation.associated_site = None
        save_modified = allocation.modified_time
        allocation.save()
        # Undo the damage of the auto_now attribute
        AllocationRequest.objects \
                         .filter(id=allocation.id) \
                         .update(modified_time=save_modified)


class Migration(migrations.Migration):

    dependencies = [
        ('rcallocation', '0038_add-national-and-associated_site'),
    ]

    operations = [
        migrations.RunPython(backfill, unbackfill)
    ]
