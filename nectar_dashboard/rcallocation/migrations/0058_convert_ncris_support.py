# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-04-11 23:00
from __future__ import unicode_literals

from django.db import migrations


def gen_mapping(NCRISFacility):
    mapping = {}
    for f in NCRISFacility.objects.all():
        mapping[f.name.lower()] = f
        mapping[f.short_name.lower()] = f

    # Old facility names ...
    mapping['ammrf'] = mapping['ma']

    # Roll over ...
    mapping['braembl'] = mapping['bpa']
    mapping['embl-abr'] = mapping['bpa']

    # Random stuff
    mapping['aodn'] = mapping['imos']
    mapping['astronomy australia limited'] = mapping['aal']
    
    return mapping


def contains_one_of(text, values):
    for v in values:
        if v in text:
            return True
    return False


NOISE = {"n/a", "m/a", "n.a.", "na", "n/a.", "null", "nil", "none", "none.",
         "no", "-", "0", "1", "don't have"}

NOT_NCRIS = {"atmc", "qcif", "qriscloud", "vicnode"}

ARDC = {"ardc", "nectar", "rds", "rdsi", "ands"}

STATE = {"act", "tas", "qld", "vic", "nsw", "wa", "nt", "sa",
         "victoria", "queensland"}

BLACK_LIST = NOISE.union(NOT_NCRIS, STATE)


class Migration(migrations.Migration):

    def convertNCRISSupport(apps, schema_editor):
        NCRISFacility = apps.get_model('rcallocation', 'NCRISFacility')
        mapping = gen_mapping(NCRISFacility)

        AllocationRequest = apps.get_model('rcallocation',
                                           'AllocationRequest')
        ncris_requests = AllocationRequest.objects.exclude(
            ncris_support__exact='')
        unmatched = set()
        convert = 0
        junk = 0
        misclassified = set()
        for a in ncris_requests:
            # if a.contact_email == "hk.lee@auckland.ac.nz":
                #  # crap records to be deleted
                # continue
            text = a.ncris_support.lower().strip()
            if contains_one_of(text, mapping.keys()):
                convert = convert + 1
                for k in mapping.keys():
                    if k in text:
                        a.ncris_facilities.add(mapping[k].id)
            elif text in BLACK_LIST:
                junk = junk + 1
            elif contains_one_of(text, ARDC):
                misclassified.add(text.encode('utf-8'))
            else:
                unmatched.add(text.encode('utf-8'))
        
        print("unmatched: %s" % unmatched)
        print("misclassified: %s" % misclassified)
        print("convert: %s, junk: %s, misclassified: %s, unknown %s" %
              (convert, junk, len(misclassified), len(unmatched)))

        
    dependencies = [
        ('rcallocation', '0057_populate_ncris_facilities'),
    ]

    operations = [
        migrations.RunPython(convertNCRISSupport,
                             migrations.RunPython.noop)
    ]
